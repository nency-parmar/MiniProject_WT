{"ast":null,"code":"const express = require('express');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst Booking = require('./Booking');\nconst cors = require('cors');\nconst connectionString = \"mongodb+srv://Nancy:123123123@cluster0.lqxeh.mongodb.net/MiniProject\";\nmongoose.connect(connectionString).then(() => {\n  console.log(\"Connection Established With Cloud...\");\n  const app = express();\n  app.use(express.json());\n  app.use(bodyParser.json());\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(cors({\n    origin: \"http://localhost:3000\"\n  }));\n  // Get All\n  app.get('/bookings', async (req, res) => {\n    const data = await Booking.find();\n    res.send(data);\n  });\n  // Get By Id\n  app.get('/bookings/:id', async (req, res) => {\n    const data = await Booking.findOne({\n      id: req.params.id\n    });\n    if (!data) {\n      return res.status(404).send({\n        error: 'Booking not Found'\n      });\n    }\n    res.send(data);\n  });\n\n  // Create\n  app.post('/bookings', async (req, res) => {\n    console.log(req.body);\n    const book = new Booking(req.body);\n    const data = await book.save();\n    res.send(data);\n  });\n\n  // Delete\n  app.delete('/bookings/:id', async (req, res) => {\n    const data = await Booking.deleteOne({\n      id: req.params.id\n    });\n    if (data.deletedCount === 0) {\n      return res.json({\n        error: 'Booking not Found'\n      });\n    }\n    res.send({\n      message: 'Booking Deleted Successfully'\n    });\n  });\n\n  // Update\n  // app.put('/bookings/:id',async(req,res) => {\n  //     const book = await Booking.findOneAndUpdate(\n  //         {id:req.params.name},\n  //         { $set: req.body },\n  //         { new: true }\n  //     );\n  //     if(!data)\n  //     {\n  //         return res.status(404).json({error : 'Booking Not Found'});\n  //     }\n  //     res.send(data);\n  // })\n  app.put('/bookings/:id', async (req, res) => {\n    try {\n      const book = await Booking.findOneAndUpdate({\n        id: req.params.id\n      },\n      // Corrected to req.params.id\n      {\n        $set: req.body\n      }, {\n        new: true\n      });\n      if (!book) {\n        // Check for book, not data\n        return res.status(404).json({\n          error: 'Booking Not Found'\n        });\n      }\n      res.send(book); // Send the updated booking information\n    } catch (error) {\n      res.status(500).json({\n        error: 'Server Error'\n      });\n    }\n  });\n  app.listen(8000, () => {\n    console.log(\"Server Started on Port 8000...\");\n  });\n});","map":{"version":3,"names":["express","require","bodyParser","mongoose","Booking","cors","connectionString","connect","then","console","log","app","use","json","urlencoded","extended","origin","get","req","res","data","find","send","findOne","id","params","status","error","post","body","book","save","delete","deleteOne","deletedCount","message","put","findOneAndUpdate","$set","new","listen"],"sources":["/Users/nencyparmar/Desktop/WT_Lab/TravellingProject/travelling/src/Components/BookNow.js"],"sourcesContent":["const express = require('express');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst Booking = require('./Booking');\nconst cors = require('cors');\n\nconst connectionString = \"mongodb+srv://Nancy:123123123@cluster0.lqxeh.mongodb.net/MiniProject\";\n\nmongoose.connect(connectionString).then(() => {\n    console.log(\"Connection Established With Cloud...\");\n    const app = express();\n\n    app.use(express.json());\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({extended : true}));\n    app.use(cors({\n        origin:\"http://localhost:3000\"\n    }));\n    // Get All\n    app.get('/bookings',async(req,res) => {\n        const data = await Booking.find();\n        res.send(data);\n    })\n    // Get By Id\n    app.get('/bookings/:id',async(req,res) => {\n        const data = await Booking.findOne({id:req.params.id});\n        if (!data) \n        {\n            return res.status(404).send({ error: 'Booking not Found' });\n        }\n        res.send(data);\n    })\n\n    // Create\n    app.post('/bookings',async(req,res) => {\n        console.log(req.body);\n        const book = new Booking(req.body);\n        const data = await book.save();\n        res.send(data);\n    })\n\n    // Delete\n    app.delete('/bookings/:id',async(req,res) => {\n        const data = await Booking.deleteOne({id:req.params.id});\n        if (data.deletedCount === 0) \n        {\n            return res.json({ error: 'Booking not Found' });\n        }\n          res.send({ message: 'Booking Deleted Successfully' })\n    })\n\n    // Update\n    // app.put('/bookings/:id',async(req,res) => {\n    //     const book = await Booking.findOneAndUpdate(\n    //         {id:req.params.name},\n    //         { $set: req.body },\n    //         { new: true }\n    //     );\n    //     if(!data)\n    //     {\n    //         return res.status(404).json({error : 'Booking Not Found'});\n    //     }\n    //     res.send(data);\n    // })\n    app.put('/bookings/:id', async (req, res) => {\n        try {\n            const book = await Booking.findOneAndUpdate(\n                { id: req.params.id },  // Corrected to req.params.id\n                { $set: req.body },\n                { new: true }\n            );\n    \n            if (!book) {  // Check for book, not data\n                return res.status(404).json({ error: 'Booking Not Found' });\n            }\n    \n            res.send(book);  // Send the updated booking information\n        } catch (error) {\n            res.status(500).json({ error: 'Server Error' });\n        }\n    });\n    \n\n    app.listen(8000,()=>{\n        console.log(\"Server Started on Port 8000...\");\n    })\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}